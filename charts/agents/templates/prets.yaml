apiVersion: apps/v1
kind: Deployment
metadata:
  name: prets
  namespace: prets
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prets
  template:
    metadata:
      labels:
        app: prets
      annotations:
        "linkerd.io/inject" : enabled
    spec:
      serviceAccountName: job-creator-prets
      containers:
        - name: prets
          image: {{ .Values.dockerArtifactAccount }}/agent:new-service-test
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: DATA_STEWARD_NAME
              value: PRETS
            - name: OC_AGENT_HOST
              value: {{ .Values.tracingEndpoint }}
          # resources:
          #   requests:
          #     memory: "128Mi"
          #   limits:
          #     memory: "256Mi"
        - name: sidecar
          image: {{ .Values.dockerArtifactAccount }}/sidecar:{{ .Values.branchNameTag }}
          imagePullPolicy: Always
          env:
            - name: AMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbit
                  key: password
            - name: AMQ_USER
              value: normal_user
            - name: OC_AGENT_HOST
              value: {{ .Values.tracingEndpoint }}

---

apiVersion: v1
kind: Service
metadata:
  name: prets
  namespace: prets
spec:
  selector:
    app: prets
  ports:
    - name: http-prets-api
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prets-ingress
  namespace: prets
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: prets.prets.svc.cluster.local
      http:
        paths:
          - pathType: Prefix
            path: "/agent/v1/sqlDataRequest/prets"
            backend:
              service:
                name: prets
                port:
                  number: 8080
