# api-gateway deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: {{ .Values.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: {{ .Values.dockerArtifactAccount }}/api-gateway:new-service-test
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: OC_AGENT_HOST
          value: {{ .Values.tracingEndpoint }}
        # resources:
        #   requests:
        #     memory: "128Mi"
        #   limits:
        #     memory: "256Mi"
      - name: sidecar
        image: {{ .Values.dockerArtifactAccount }}/sidecar:{{ .Values.branchNameTag}}
        imagePullPolicy: Always
        env:
        - name: AMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbit
              key: password
        - name: AMQ_USER
          value: normal_user
        - name: OC_AGENT_HOST
          value: {{ .Values.tracingEndpoint }}

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: {{ .Values.Namespace }}
spec:
  selector:
    app: api-gateway
  ports:
    - name: http-api-gateway-api
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  namespace: {{ .Values.Namespace }}
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: api-gateway.api-gateway.svc.cluster.local
    http:
      paths:
      - pathType: Prefix
        path: "/api/v1"
        backend:
          service:
            name: api-gateway
            port:
              number: 8080
